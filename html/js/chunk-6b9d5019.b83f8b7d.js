(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-6b9d5019","chunk-2d0abe28"],{"16d1":function(e,n,i){"use strict";i.r(n),i.d(n,"client",(function(){return a})),i.d(n,"flowClient",(function(){return t})),i.d(n,"speciaDatalArray",(function(){return r})),i.d(n,"EQUIPMENT_DEFULTE",(function(){return d})),i.d(n,"STATUS",(function(){return u})),i.d(n,"ACTIONS",(function(){return l})),i.d(n,"SIGNATURE_PATH_USE",(function(){return s}));var a="product",t="flow",r=["",null,void 0,NaN],d={ASSIGN_STATUS:{code:"ASSIGN_STATUS"}},u={VALIDATED:"VALIDATED",CREATED:"CREATED"},l={ADD:"add",EDIT:"edit",DETAIL:"detail",SELECT:"select"},s={REMARKS:"REMARK",DEVIATION:"DEVIATION"}},"2e4a":function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"where"}},type:{kind:"NamedType",name:{kind:"Name",value:"SignaturePathDetailWhereInput"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"orderBy"}},type:{kind:"NamedType",name:{kind:"Name",value:"SignaturePathDetailOrderByInput"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"first"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},defaultValue:{kind:"IntValue",value:"30"},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"skip"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},defaultValue:{kind:"IntValue",value:"0"},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"total"},name:{kind:"Name",value:"signaturePathDetailsConnection"},arguments:[{kind:"Argument",name:{kind:"Name",value:"where"},value:{kind:"Variable",name:{kind:"Name",value:"where"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"aggregate"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"pageInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"hasNextPage"},arguments:[],directives:[]}]}}]}},{kind:"Field",alias:{kind:"Name",value:"list"},name:{kind:"Name",value:"signaturePathDetails"},arguments:[{kind:"Argument",name:{kind:"Name",value:"where"},value:{kind:"Variable",name:{kind:"Name",value:"where"}}},{kind:"Argument",name:{kind:"Name",value:"first"},value:{kind:"Variable",name:{kind:"Name",value:"first"}}},{kind:"Argument",name:{kind:"Name",value:"skip"},value:{kind:"Variable",name:{kind:"Name",value:"skip"}}},{kind:"Argument",name:{kind:"Name",value:"orderBy"},value:{kind:"Variable",name:{kind:"Name",value:"orderBy"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"levelNum"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"levelName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"UserGroupCode"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"signaturePath"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:521}};i.loc.source={body:"query(\r\n  $where: SignaturePathDetailWhereInput\r\n  $orderBy: SignaturePathDetailOrderByInput\r\n  $first: Int = 30\r\n  $skip: Int = 0\r\n) {\r\n  total: signaturePathDetailsConnection(where: $where) {\r\n    aggregate {\r\n      count\r\n    }\r\n    pageInfo {\r\n      hasNextPage\r\n    }\r\n  }\r\n  list: signaturePathDetails(\r\n    where: $where\r\n    first: $first\r\n    skip: $skip\r\n    orderBy: $orderBy\r\n  ) {\r\n    id\r\n    levelNum\r\n    levelName\r\n    UserGroupCode\r\n    signaturePath {\r\n      id\r\n      code\r\n      name\r\n    }\r\n  }\r\n}\r\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var t={};(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),t[e.name.value]=n}}))})(),e.exports=i},"3a31":function(e,n,i){"use strict";var a=i("6fab"),t=a["a"].clients.system;n["a"]=t},"56fd":function(e,n,i){"use strict";i.d(n,"e",(function(){return y})),i.d(n,"f",(function(){return w})),i.d(n,"g",(function(){return V})),i.d(n,"b",(function(){return I})),i.d(n,"a",(function(){return T})),i.d(n,"h",(function(){return U})),i.d(n,"c",(function(){return $})),i.d(n,"d",(function(){return x}));i("96cf");var a=i("1da1"),t=i("8d93"),r=i.n(t),d=i("2e4a"),u=i.n(d),l=i("9bf0"),s=i.n(l),o=i("dc06"),m=i.n(o),c=i("a4c9"),v=i.n(c),k=i("9210"),f=i.n(k),p=i("8821"),N=i.n(p),g=i("f70e"),h=i.n(g),S=i("f4c6"),b=i("3a31");function y(){return D.apply(this,arguments)}function D(){return D=Object(a["a"])(regeneratorRuntime.mark((function e(){var n,i,a,t,d,u=arguments;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return n=u.length>0&&void 0!==u[0]?u[0]:{},i=u.length>1&&void 0!==u[1]?u[1]:"code_ASC",a=u.length>2&&void 0!==u[2]?u[2]:100,t=u.length>3&&void 0!==u[3]?u[3]:0,e.next=6,S["a"].query({query:r.a,variables:{where:n,orderBy:i,first:a,skip:t}});case 6:return d=e.sent,e.abrupt("return",d.data||[]);case 8:case"end":return e.stop()}}),e)}))),D.apply(this,arguments)}function w(){return F.apply(this,arguments)}function F(){return F=Object(a["a"])(regeneratorRuntime.mark((function e(){var n,i,a,t,r,d=arguments;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return n=d.length>0&&void 0!==d[0]?d[0]:{},i=d.length>1&&void 0!==d[1]?d[1]:"levelNum_ASC",a=d.length>2&&void 0!==d[2]?d[2]:100,t=d.length>3&&void 0!==d[3]?d[3]:0,e.next=6,S["a"].query({query:u.a,variables:{where:n,orderBy:i,first:a,skip:t}});case 6:return r=e.sent,e.abrupt("return",r.data.list||[]);case 8:case"end":return e.stop()}}),e)}))),F.apply(this,arguments)}function V(){return E.apply(this,arguments)}function E(){return E=Object(a["a"])(regeneratorRuntime.mark((function e(){var n;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,b["a"].query({query:h.a});case 2:return n=e.sent,e.abrupt("return",n.data.userGroups||[]);case 4:case"end":return e.stop()}}),e)}))),E.apply(this,arguments)}function I(e){return P.apply(this,arguments)}function P(){return P=Object(a["a"])(regeneratorRuntime.mark((function e(n){var i;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,S["a"].mutate({mutation:s.a,variables:n});case 2:return i=e.sent,e.abrupt("return",i.data.createResponse);case 4:case"end":return e.stop()}}),e)}))),P.apply(this,arguments)}function T(e){return A.apply(this,arguments)}function A(){return A=Object(a["a"])(regeneratorRuntime.mark((function e(n){var i;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,S["a"].mutate({mutation:m.a,variables:n});case 2:return i=e.sent,e.abrupt("return",i.data.createResponse);case 4:case"end":return e.stop()}}),e)}))),A.apply(this,arguments)}function U(e){return O.apply(this,arguments)}function O(){return O=Object(a["a"])(regeneratorRuntime.mark((function e(n){var i;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,S["a"].mutate({mutation:v.a,variables:n});case 2:return i=e.sent,e.abrupt("return",i.data.list||[]);case 4:case"end":return e.stop()}}),e)}))),O.apply(this,arguments)}function $(e){return R.apply(this,arguments)}function R(){return R=Object(a["a"])(regeneratorRuntime.mark((function e(n){var i;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,S["a"].mutate({mutation:f.a,variables:n});case 2:return i=e.sent,e.abrupt("return",i.data.list||[]);case 4:case"end":return e.stop()}}),e)}))),R.apply(this,arguments)}function x(e){return q.apply(this,arguments)}function q(){return q=Object(a["a"])(regeneratorRuntime.mark((function e(n){var i;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,S["a"].mutate({mutation:N.a,variables:n});case 2:return i=e.sent,e.abrupt("return",i.data.list||[]);case 4:case"end":return e.stop()}}),e)}))),q.apply(this,arguments)}},8821:function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"where"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"SignaturePathDetailWhereUniqueInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"deleteSignaturePathDetail"},arguments:[{kind:"Argument",name:{kind:"Name",value:"where"},value:{kind:"Variable",name:{kind:"Name",value:"where"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"levelNum"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"levelName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"UserGroupCode"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:168}};i.loc.source={body:"mutation($where: SignaturePathDetailWhereUniqueInput!) {\r\n  deleteSignaturePathDetail(where: $where) {\r\n    id\r\n    levelNum\r\n    levelName\r\n    UserGroupCode\r\n  }\r\n}\r\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var t={};(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),t[e.name.value]=n}}))})(),e.exports=i},"8d93":function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"where"}},type:{kind:"NamedType",name:{kind:"Name",value:"SignaturePathHeaderWhereInput"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"orderBy"}},type:{kind:"NamedType",name:{kind:"Name",value:"SignaturePathHeaderOrderByInput"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"first"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},defaultValue:{kind:"IntValue",value:"30"},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"skip"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},defaultValue:{kind:"IntValue",value:"0"},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"total"},name:{kind:"Name",value:"signaturePathHeadersConnection"},arguments:[{kind:"Argument",name:{kind:"Name",value:"where"},value:{kind:"Variable",name:{kind:"Name",value:"where"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"aggregate"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"pageInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"hasNextPage"},arguments:[],directives:[]}]}}]}},{kind:"Field",alias:{kind:"Name",value:"list"},name:{kind:"Name",value:"signaturePathHeaders"},arguments:[{kind:"Argument",name:{kind:"Name",value:"where"},value:{kind:"Variable",name:{kind:"Name",value:"where"}}},{kind:"Argument",name:{kind:"Name",value:"first"},value:{kind:"Variable",name:{kind:"Name",value:"first"}}},{kind:"Argument",name:{kind:"Name",value:"skip"},value:{kind:"Variable",name:{kind:"Name",value:"skip"}}},{kind:"Argument",name:{kind:"Name",value:"orderBy"},value:{kind:"Variable",name:{kind:"Name",value:"orderBy"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"createdAt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"updatedAt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"createUser"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"updateUser"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:505}};i.loc.source={body:"query(\r\n  $where: SignaturePathHeaderWhereInput\r\n  $orderBy: SignaturePathHeaderOrderByInput\r\n  $first: Int = 30\r\n  $skip: Int = 0\r\n) {\r\n  total: signaturePathHeadersConnection(where: $where) {\r\n    aggregate {\r\n      count\r\n    }\r\n    pageInfo {\r\n      hasNextPage\r\n    }\r\n  }\r\n  list: signaturePathHeaders(\r\n    where: $where\r\n    first: $first\r\n    skip: $skip\r\n    orderBy: $orderBy\r\n  ) {\r\n    id\r\n    createdAt\r\n    updatedAt\r\n    createUser\r\n    updateUser\r\n    code\r\n    name\r\n    status\r\n  }\r\n}\r\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var t={};(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),t[e.name.value]=n}}))})(),e.exports=i},9210:function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"where"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"SignaturePathHeaderWhereUniqueInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"deleteSignaturePathHeader"},arguments:[{kind:"Argument",name:{kind:"Name",value:"where"},value:{kind:"Variable",name:{kind:"Name",value:"where"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:152}};i.loc.source={body:"mutation($where: SignaturePathHeaderWhereUniqueInput!) {\r\n  deleteSignaturePathHeader(where: $where) {\r\n    id\r\n    code\r\n    name\r\n    status\r\n  }\r\n}\r\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var t={};(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),t[e.name.value]=n}}))})(),e.exports=i},"9bf0":function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"data"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"SignaturePathHeaderCreateInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"createResponse"},name:{kind:"Name",value:"createSignaturePathHeader"},arguments:[{kind:"Argument",name:{kind:"Name",value:"data"},value:{kind:"Variable",name:{kind:"Name",value:"data"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"createUser"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"updateUser"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:192}};i.loc.source={body:"mutation($data: SignaturePathHeaderCreateInput!) {\r\n  createResponse: createSignaturePathHeader(data: $data) {\r\n    id\r\n    createUser\r\n    updateUser\r\n    code\r\n    name\r\n    status\r\n  }\r\n}\r\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var t={};(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),t[e.name.value]=n}}))})(),e.exports=i},a4c9:function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"data"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"SignaturePathHeaderUpdateInput"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"where"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"SignaturePathHeaderWhereUniqueInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"list"},name:{kind:"Name",value:"updateSignaturePathHeader"},arguments:[{kind:"Argument",name:{kind:"Name",value:"data"},value:{kind:"Variable",name:{kind:"Name",value:"data"}}},{kind:"Argument",name:{kind:"Name",value:"where"},value:{kind:"Variable",name:{kind:"Name",value:"where"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"updateUser"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:235}};i.loc.source={body:"mutation(\r\n  $data: SignaturePathHeaderUpdateInput!\r\n  $where: SignaturePathHeaderWhereUniqueInput!\r\n) {\r\n  list: updateSignaturePathHeader(data: $data, where: $where) {\r\n    id\r\n    updateUser\r\n    code\r\n    name\r\n    status\r\n  }\r\n}\r\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var t={};(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),t[e.name.value]=n}}))})(),e.exports=i},dc06:function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"data"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"SignaturePathDetailCreateInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"createResponse"},name:{kind:"Name",value:"createSignaturePathDetail"},arguments:[{kind:"Argument",name:{kind:"Name",value:"data"},value:{kind:"Variable",name:{kind:"Name",value:"data"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"createUser"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"updateUser"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"levelNum"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"levelName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"UserGroupCode"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"signaturePath"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"createUser"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"updateUser"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:320}};i.loc.source={body:"mutation($data: SignaturePathDetailCreateInput!) {\r\n  createResponse: createSignaturePathDetail(data: $data) {\r\n    id\r\n    createUser\r\n    updateUser\r\n    levelNum\r\n    levelName\r\n    UserGroupCode\r\n    signaturePath {\r\n      id\r\n      createUser\r\n      updateUser\r\n      code\r\n      name\r\n      status\r\n    }\r\n  }\r\n}\r\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var t={};(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),t[e.name.value]=n}}))})(),e.exports=i},f70e:function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"userGroups"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:61}};i.loc.source={body:"query {\r\n  userGroups {\r\n    id\r\n    code\r\n    name\r\n  }\r\n}\r\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var t={};(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),t[e.name.value]=n}}))})(),e.exports=i}}]);