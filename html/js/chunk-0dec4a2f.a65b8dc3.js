(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-0dec4a2f"],{"0983":function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"name"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"nodes"},name:{kind:"Name",value:"userGroupsConnection"},arguments:[{kind:"Argument",name:{kind:"Name",value:"where"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"AND"},value:{kind:"ListValue",values:[{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"name"},value:{kind:"Variable",name:{kind:"Name",value:"name"}}},{kind:"ObjectField",name:{kind:"Name",value:"id_not"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}]}]}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"aggregate"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:160}};i.loc.source={body:"query($name: String!, $id: ID) {\r\n  nodes: userGroupsConnection(where: { AND: [{ name: $name, id_not: $id }] }) {\r\n    aggregate {\r\n      count\r\n    }\r\n  }\r\n}\r\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var t={};(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),t[e.name.value]=n}}))})(),e.exports=i},"23c3":function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"where"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"UserGroupWhereUniqueInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"deleteUserGroup"},arguments:[{kind:"Argument",name:{kind:"Name",value:"where"},value:{kind:"Variable",name:{kind:"Name",value:"where"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:120}};i.loc.source={body:"mutation($where: UserGroupWhereUniqueInput!) {\r\n  deleteUserGroup(where: $where) {\r\n    id\r\n    code\r\n    name\r\n  }\r\n}\r\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var t={};(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),t[e.name.value]=n}}))})(),e.exports=i},"3a31":function(e,n,i){"use strict";var a=i("6fab"),t=a["a"].clients.system;n["a"]=t},5510:function(e,n,i){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"userGroups"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"fields"},directives:[]},{kind:"Field",name:{kind:"Name",value:"users"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"person"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:148}};a.loc.source={body:"#import './_fragment.gql'\r\n\r\nquery {\r\n  userGroups {\r\n    ...fields\r\n    users {\r\n      name\r\n      person {\r\n        name\r\n      }\r\n    }\r\n  }\r\n}\r\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};function d(e){return e.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!t[n]&&(t[n]=!0,!0)}))}function r(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){r(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){r(e,n)})),e.definitions&&e.definitions.forEach((function(e){r(e,n)}))}a.definitions=a.definitions.concat(d(i("f67c").definitions));var l={};(function(){a.definitions.forEach((function(e){if(e.name){var n=new Set;r(e,n),l[e.name.value]=n}}))})(),e.exports=a},"56d3":function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"code"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"nodes"},name:{kind:"Name",value:"userGroupsConnection"},arguments:[{kind:"Argument",name:{kind:"Name",value:"where"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"AND"},value:{kind:"ListValue",values:[{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"code"},value:{kind:"Variable",name:{kind:"Name",value:"code"}}},{kind:"ObjectField",name:{kind:"Name",value:"id_not"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}]}]}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"aggregate"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:160}};i.loc.source={body:"query($code: String!, $id: ID) {\r\n  nodes: userGroupsConnection(where: { AND: [{ code: $code, id_not: $id }] }) {\r\n    aggregate {\r\n      count\r\n    }\r\n  }\r\n}\r\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var t={};(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),t[e.name.value]=n}}))})(),e.exports=i},"5fb9":function(e,n){var i={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"fields"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Menu"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"menuType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"url"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"i18N"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"icon"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"orderNo"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"enable"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"parent"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"module"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"actionGroups"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"i18N"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"actions"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"i18N"},arguments:[],directives:[]}]}}]}}]}},{kind:"OperationDefinition",operation:"query",variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"menus"},name:{kind:"Name",value:"menusInRole"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"fields"},directives:[]},{kind:"Field",name:{kind:"Name",value:"menus"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"fields"},directives:[]},{kind:"Field",name:{kind:"Name",value:"menus"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"fields"},directives:[]},{kind:"Field",name:{kind:"Name",value:"menus"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"fields"},directives:[]},{kind:"Field",name:{kind:"Name",value:"menus"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"fields"},directives:[]},{kind:"Field",name:{kind:"Name",value:"menus"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"fields"},directives:[]}]}}]}}]}}]}}]}}]}}]}}],loc:{start:0,end:968}};i.loc.source={body:"# query {\r\n#   menus(orderBy: orderNo_ASC) {\r\n#     id\r\n#     code\r\n#     name\r\n#     parent {\r\n#       id\r\n#     }\r\n#     menus {\r\n#       id\r\n#     }\r\n#     menuType\r\n#     url\r\n#     i18N\r\n#     icon\r\n#     orderNo\r\n#     description\r\n#     enable\r\n#   }\r\n\r\n#   actions {\r\n#     id\r\n#     code\r\n#     name\r\n#     description\r\n#   }\r\n# }\r\n\r\nfragment fields on Menu {\r\n  id\r\n  code\r\n  name\r\n  menuType\r\n  url\r\n  i18N\r\n  icon\r\n  orderNo\r\n  description\r\n  enable\r\n  parent {\r\n    id\r\n  }\r\n  module {\r\n    id\r\n    code\r\n    name\r\n  }\r\n  actionGroups {\r\n    id\r\n    code\r\n    name\r\n    i18N\r\n    actions {\r\n      id\r\n      code\r\n      name\r\n      i18N\r\n    }\r\n  }\r\n}\r\n\r\nquery {\r\n  menus: menusInRole {\r\n    ...fields\r\n    menus {\r\n      ...fields\r\n      menus {\r\n        ...fields\r\n        menus {\r\n          ...fields\r\n          menus {\r\n            ...fields\r\n            menus {\r\n              ...fields\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var t={};(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),t[e.name.value]=n}}))})(),e.exports=i},c9e5:function(e,n,i){"use strict";i.d(n,"a",(function(){return k}));i("96cf");var a=i("1da1"),t=i("5510"),d=i.n(t);i.d(n,"e",(function(){return d.a}));var r=i("23c3"),l=i.n(r);i.d(n,"c",(function(){return l.a}));var o=i("f322"),s=i.n(o);i.d(n,"d",(function(){return s.a}));i("56d3"),i("0983");var u=i("5fb9"),m=i.n(u);i.d(n,"b",(function(){return m.a}));i("cd91");var c=i("3a31");function k(){return v.apply(this,arguments)}function v(){return v=Object(a["a"])(regeneratorRuntime.mark((function e(){var n;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,c["a"].query({query:d.a,manual:!0});case 2:return n=e.sent,e.abrupt("return",n.data||[]);case 4:case"end":return e.stop()}}),e)}))),v.apply(this,arguments)}},cd91:function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"userGroupCode"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"permissions"},arguments:[{kind:"Argument",name:{kind:"Name",value:"where"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"group"},value:{kind:"StringValue",value:"base",block:!1}},{kind:"ObjectField",name:{kind:"Name",value:"userGroup"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"code"},value:{kind:"Variable",name:{kind:"Name",value:"userGroupCode"}}}]}}]}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"menu"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"group"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"actions"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:214}};i.loc.source={body:'query($userGroupCode: String!) {\r\n  permissions(where: { group: "base", userGroup: { code: $userGroupCode } }) {\r\n    id\r\n    menu {\r\n      id\r\n    }\r\n    group\r\n    actions {\r\n      id\r\n      code\r\n    }\r\n  }\r\n}\r\n',name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var t={};(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),t[e.name.value]=n}}))})(),e.exports=i},f322:function(e,n,i){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"where"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"UserGroupWhereUniqueInput"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"create"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"UserGroupCreateInput"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"update"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"UserGroupUpdateInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"node"},name:{kind:"Name",value:"upsertUserGroup"},arguments:[{kind:"Argument",name:{kind:"Name",value:"where"},value:{kind:"Variable",name:{kind:"Name",value:"where"}}},{kind:"Argument",name:{kind:"Name",value:"create"},value:{kind:"Variable",name:{kind:"Name",value:"create"}}},{kind:"Argument",name:{kind:"Name",value:"update"},value:{kind:"Variable",name:{kind:"Name",value:"update"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"fields"},directives:[]}]}}]}}],loc:{start:0,end:250}};a.loc.source={body:"#import './_fragment.gql'\r\n\r\nmutation(\r\n  $where: UserGroupWhereUniqueInput!\r\n  $create: UserGroupCreateInput!\r\n  $update: UserGroupUpdateInput!\r\n) {\r\n  node: upsertUserGroup(where: $where, create: $create, update: $update) {\r\n    ...fields\r\n  }\r\n}\r\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};function d(e){return e.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!t[n]&&(t[n]=!0,!0)}))}function r(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){r(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){r(e,n)})),e.definitions&&e.definitions.forEach((function(e){r(e,n)}))}a.definitions=a.definitions.concat(d(i("f67c").definitions));var l={};(function(){a.definitions.forEach((function(e){if(e.name){var n=new Set;r(e,n),l[e.name.value]=n}}))})(),e.exports=a},f67c:function(e,n){var i={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"fields"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"UserGroup"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"createdAt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"updatedAt"},arguments:[],directives:[]}]}}],loc:{start:0,end:83}};i.loc.source={body:"fragment fields on UserGroup {\r\n  id\r\n  code\r\n  name\r\n  createdAt\r\n  updatedAt\r\n}\r\n",name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=i}}]);