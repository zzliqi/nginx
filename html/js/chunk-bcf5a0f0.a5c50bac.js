(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-bcf5a0f0","chunk-cbe0b002","chunk-2d0abe28"],{"0333":function(e,n,i){"use strict";i.d(n,"d",(function(){return g})),i.d(n,"e",(function(){return b})),i.d(n,"f",(function(){return w})),i.d(n,"a",(function(){return D})),i.d(n,"g",(function(){return E})),i.d(n,"b",(function(){return I}));i("96cf");var a=i("1da1"),t=i("11db"),r=i.n(t),d=i("735c"),u=i.n(d),s=i("2208"),l=i.n(s),o=i("6a47"),m=i.n(o),c=(i("77a3"),i("12b5")),v=i.n(c),k=i("422ba"),f=i.n(k);i.d(n,"c",(function(){return f.a}));var p=i("9922"),N=i.n(p),h=i("f4c6");function g(){return y.apply(this,arguments)}function y(){return y=Object(a["a"])(regeneratorRuntime.mark((function e(){var n,i,a,t,d,u=arguments;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return n=u.length>0&&void 0!==u[0]?u[0]:{},i=u.length>1&&void 0!==u[1]?u[1]:"name_ASC",a=u.length>2&&void 0!==u[2]?u[2]:100,t=u.length>3&&void 0!==u[3]?u[3]:0,e.next=6,h["a"].query({query:r.a,variables:{where:n,orderBy:i,first:a,skip:t}});case 6:return d=e.sent,e.abrupt("return",d.data||[]);case 8:case"end":return e.stop()}}),e)}))),y.apply(this,arguments)}function b(e){return S.apply(this,arguments)}function S(){return S=Object(a["a"])(regeneratorRuntime.mark((function e(n){var i;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,h["a"].query({query:N.a,variables:{where:n}});case 2:return i=e.sent,e.abrupt("return",i.data.list||[]);case 4:case"end":return e.stop()}}),e)}))),S.apply(this,arguments)}function w(e){return F.apply(this,arguments)}function F(){return F=Object(a["a"])(regeneratorRuntime.mark((function e(n){var i;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,h["a"].query({query:v.a,variables:{where:n}});case 2:return i=e.sent,e.abrupt("return",i.data.list||[]);case 4:case"end":return e.stop()}}),e)}))),F.apply(this,arguments)}function D(e){return V.apply(this,arguments)}function V(){return V=Object(a["a"])(regeneratorRuntime.mark((function e(n){var i;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,h["a"].mutate({mutation:u.a,variables:n});case 2:return i=e.sent,e.abrupt("return",i.data.list||[]);case 4:case"end":return e.stop()}}),e)}))),V.apply(this,arguments)}function E(e){return q.apply(this,arguments)}function q(){return q=Object(a["a"])(regeneratorRuntime.mark((function e(n){var i;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,h["a"].mutate({mutation:l.a,variables:n});case 2:return i=e.sent,e.abrupt("return",i.data.list||[]);case 4:case"end":return e.stop()}}),e)}))),q.apply(this,arguments)}function I(e){return A.apply(this,arguments)}function A(){return A=Object(a["a"])(regeneratorRuntime.mark((function e(n){var i;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,h["a"].mutate({mutation:m.a,variables:n});case 2:return i=e.sent,e.abrupt("return",i.data.list||[]);case 4:case"end":return e.stop()}}),e)}))),A.apply(this,arguments)}},"11db":function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"where"}},type:{kind:"NamedType",name:{kind:"Name",value:"OPCServerWhereInput"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"orderBy"}},type:{kind:"NamedType",name:{kind:"Name",value:"OPCServerOrderByInput"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"first"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},defaultValue:{kind:"IntValue",value:"30"},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"skip"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},defaultValue:{kind:"IntValue",value:"0"},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"total"},name:{kind:"Name",value:"oPCServersConnection"},arguments:[{kind:"Argument",name:{kind:"Name",value:"where"},value:{kind:"Variable",name:{kind:"Name",value:"where"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"aggregate"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"pageInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"hasNextPage"},arguments:[],directives:[]}]}}]}},{kind:"Field",alias:{kind:"Name",value:"list"},name:{kind:"Name",value:"oPCServers"},arguments:[{kind:"Argument",name:{kind:"Name",value:"where"},value:{kind:"Variable",name:{kind:"Name",value:"where"}}},{kind:"Argument",name:{kind:"Name",value:"first"},value:{kind:"Variable",name:{kind:"Name",value:"first"}}},{kind:"Argument",name:{kind:"Name",value:"skip"},value:{kind:"Variable",name:{kind:"Name",value:"skip"}}},{kind:"Argument",name:{kind:"Name",value:"orderBy"},value:{kind:"Variable",name:{kind:"Name",value:"orderBy"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"createdAt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"updatedAt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"createUser"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"updateUser"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"address"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isLocked"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"securityPolicy"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"securityModel"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"certification"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"loginMethod"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"user"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"password"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:579}};i.loc.source={body:"query(\r\n  $where: OPCServerWhereInput\r\n  $orderBy: OPCServerOrderByInput\r\n  $first: Int = 30\r\n  $skip: Int = 0\r\n) {\r\n  total: oPCServersConnection(where: $where) {\r\n    aggregate {\r\n      count\r\n    }\r\n    pageInfo {\r\n      hasNextPage\r\n    }\r\n  }\r\n  list: oPCServers(\r\n    where: $where\r\n    first: $first\r\n    skip: $skip\r\n    orderBy: $orderBy\r\n  ) {\r\n    id\r\n    createdAt\r\n    updatedAt\r\n    createUser\r\n    updateUser\r\n    name\r\n    code\r\n    address\r\n    isLocked\r\n    securityPolicy\r\n    securityModel\r\n    certification\r\n    loginMethod\r\n    user\r\n    password\r\n  }\r\n}\r\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var t={};(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),t[e.name.value]=n}}))})(),e.exports=i},"12b5":function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"where"}},type:{kind:"NamedType",name:{kind:"Name",value:"EqpInterfaceBindingWhereInput"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"orderBy"}},type:{kind:"NamedType",name:{kind:"Name",value:"EqpInterfaceBindingOrderByInput"}},defaultValue:{kind:"EnumValue",value:"bindingKey1_ASC"},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"first"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},defaultValue:{kind:"IntValue",value:"100"},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"skip"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},defaultValue:{kind:"IntValue",value:"0"},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"total"},name:{kind:"Name",value:"eqpInterfaceBindingsConnection"},arguments:[{kind:"Argument",name:{kind:"Name",value:"where"},value:{kind:"Variable",name:{kind:"Name",value:"where"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"aggregate"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"pageInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"hasNextPage"},arguments:[],directives:[]}]}}]}},{kind:"Field",alias:{kind:"Name",value:"list"},name:{kind:"Name",value:"eqpInterfaceBindings"},arguments:[{kind:"Argument",name:{kind:"Name",value:"where"},value:{kind:"Variable",name:{kind:"Name",value:"where"}}},{kind:"Argument",name:{kind:"Name",value:"first"},value:{kind:"Variable",name:{kind:"Name",value:"first"}}},{kind:"Argument",name:{kind:"Name",value:"skip"},value:{kind:"Variable",name:{kind:"Name",value:"skip"}}},{kind:"Argument",name:{kind:"Name",value:"orderBy"},value:{kind:"Variable",name:{kind:"Name",value:"orderBy"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"bindingKey1"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"eqpEquipment"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"eqpCfg"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isObsolete"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"eqpClass"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"isToBeUpdated"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isAutoUpdate"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:725}};i.loc.source={body:"query(\r\n  $where: EqpInterfaceBindingWhereInput\r\n  $orderBy: EqpInterfaceBindingOrderByInput = bindingKey1_ASC\r\n  $first: Int = 100\r\n  $skip: Int = 0\r\n) {\r\n  total: eqpInterfaceBindingsConnection(\r\n    where: $where\r\n  ) {\r\n    aggregate {\r\n      count\r\n    }\r\n    pageInfo {\r\n      hasNextPage\r\n    }\r\n  }\r\n  list: eqpInterfaceBindings(\r\n    where: $where\r\n    first: $first\r\n    skip: $skip\r\n    orderBy: $orderBy\r\n  ) {\r\n    id\r\n    bindingKey1\r\n    eqpEquipment {\r\n      id\r\n      code\r\n      name\r\n      eqpCfg {\r\n        id\r\n        code\r\n        name\r\n        isObsolete\r\n      }\r\n      eqpClass {\r\n        id\r\n        code\r\n        name\r\n      }\r\n      isToBeUpdated\r\n      isAutoUpdate\r\n      status\r\n    }\r\n  }\r\n}\r\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var t={};(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),t[e.name.value]=n}}))})(),e.exports=i},"16d1":function(e,n,i){"use strict";i.r(n),i.d(n,"client",(function(){return a})),i.d(n,"flowClient",(function(){return t})),i.d(n,"speciaDatalArray",(function(){return r})),i.d(n,"EQUIPMENT_DEFULTE",(function(){return d})),i.d(n,"STATUS",(function(){return u})),i.d(n,"ACTIONS",(function(){return s})),i.d(n,"SIGNATURE_PATH_USE",(function(){return l}));var a="product",t="flow",r=["",null,void 0,NaN],d={ASSIGN_STATUS:{code:"ASSIGN_STATUS"}},u={VALIDATED:"VALIDATED",CREATED:"CREATED"},s={ADD:"add",EDIT:"edit",DETAIL:"detail",SELECT:"select"},l={REMARKS:"REMARK",DEVIATION:"DEVIATION"}},1705:function(e,n,i){"use strict";i.r(n);var a=function(){var e=this,n=e.$createElement,i=e._self._c||n;return i("edit-modal",{ref:"editModal",attrs:{subtitle:e.subtitle,isOk:e.isOk,modalWidth:1e3},on:{cancel:e.cancel}},[i("clientGrid",{staticStyle:{width:"100%",height:"400px"},attrs:{colDefs:e.columnDefs,rowData:e.rowData}})],1)},t=[],r=(i("96cf"),i("1da1")),d=(i("6762"),i("2fdb"),i("9974b")),u=i("16d1"),s=i("8eac"),l=i("9dc1"),o=i("0333"),m={name:"equipment-dialog",components:{editModal:s["a"],clientGrid:l["a"]},props:{equimentData:{type:Array,default:function(){return[]}}},data:function(){return{isOk:!1,subtitle:this.$t("common.actions.equipment"),modules:d["a"],rowData:[],columnDefs:[{type:["rowNumberColumn"]},{headerName:this.$t("common.labels.code"),field:"code"},{headerName:this.$t("common.labels.name"),field:"name"},{headerName:this.$t("common.actions.category"),field:"eqpClass.name"},{headerName:this.$t("system.opcServer.equipment.isToBeUpdated"),field:"isToBeUpdated",sortable:!1,valueFormatter:this.formatterIsToBeUpdated},{headerName:this.$t("system.opcServer.equipment.isAutoUpdate"),field:"isAutoUpdate",sortable:!1,valueFormatter:this.formatterIsAutoUpdate},{headerName:this.$t("common.actions.status"),field:"status",sortable:!1,valueFormatter:this.formatterStatus},{headerName:this.$t("system.opcServer.equipment.statusValueCode"),field:"statusValueCode",sortable:!1,valueFormatter:this.formatterStatusValueCode},{headerName:this.$t("system.opcServer.equipment.workOrder"),field:"workOrder",sortable:!1}]}},watch:{equimentData:function(e){e&&this.getPagenation()}},methods:{formatterIsToBeUpdated:function(e){var n=e.value;return u["speciaDatalArray"].includes(n)?"":this.$t("system.opcServer.EqpUpdateStatus.".concat(n))},formatterIsAutoUpdate:function(e){var n=e.value;return u["speciaDatalArray"].includes(n)?"":this.$t("system.opcServer.EqpUpdateMode.".concat(n))},formatterStatus:function(e){var n=e.value;return n?this.$t("system.opcServer.EqpStatus.".concat(n)):""},formatterStatusValueCode:function(e){var n=e.value;return n?this.$t("system.opcServer.EqpAssignStatus.".concat(n)):""},getPagenation:function(){var e=Object(r["a"])(regeneratorRuntime.mark((function e(){var n,i;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:try{n={},i=this.equimentData.reduce((function(e,i){var a=i.eqpEquipment.id;return!n[a]&&(n[a]=e.push(i.eqpEquipment)),e}),[]),this.handleEquipmentData(i)}catch(a){this.$Message.error(this.$t("common.messages.operationFailure"))}case 1:case"end":return e.stop()}}),e,this)})));function n(){return e.apply(this,arguments)}return n}(),handleEquipmentData:function(){var e=Object(r["a"])(regeneratorRuntime.mark((function e(n){var i,a,t,r;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:if(Array.isArray(n)){e.next=2;break}return e.abrupt("return");case 2:return i=[],n.map((function(e){i.push(e.id)})),a={where:{eqpEquipment:{id_in:i},eqpProperty:{code:u["EQUIPMENT_DEFULTE"].ASSIGN_STATUS.code}}},e.next=7,this.callGraphQlMution(o["c"],a);case 7:t=e.sent,r=t.data.list,r.map((function(e){var i=e.workOrder,a=e.statusValueCode;n.map((function(n){e.eqpEquipment.id!=n.id||Object.assign(n,{workOrder:i,statusValueCode:a})}))})),this.rowData=n;case 11:case"end":return e.stop()}}),e,this)})));function n(n){return e.apply(this,arguments)}return n}(),cancel:function(){var e=Object(r["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:this.rowData=[],this.$emit("closeDialog"),this.$refs.editModal.close();case 3:case"end":return e.stop()}}),e,this)})));function n(){return e.apply(this,arguments)}return n}(),open:function(){var e=Object(r["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:this.$refs.editModal.open(!0);case 1:case"end":return e.stop()}}),e,this)})));function n(){return e.apply(this,arguments)}return n}(),callGraphQlMution:function(){var e=Object(r["a"])(regeneratorRuntime.mark((function e(n,i){var a;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,this.$apollo.mutate({mutation:n,variables:i,client:u["client"]});case 2:return a=e.sent,e.abrupt("return",a);case 4:case"end":return e.stop()}}),e,this)})));function n(n,i){return e.apply(this,arguments)}return n}()}},c=m,v=i("2877"),k=Object(v["a"])(c,a,t,!1,null,null,null);n["default"]=k.exports},2208:function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"data"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"OPCServerUpdateInput"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"where"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"OPCServerWhereUniqueInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"updateOPCServer"},arguments:[{kind:"Argument",name:{kind:"Name",value:"data"},value:{kind:"Variable",name:{kind:"Name",value:"data"}}},{kind:"Argument",name:{kind:"Name",value:"where"},value:{kind:"Variable",name:{kind:"Name",value:"where"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"updateUser"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"address"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isLocked"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"securityPolicy"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"securityModel"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"certification"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"loginMethod"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"user"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"password"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:297}};i.loc.source={body:"mutation($data: OPCServerUpdateInput!, $where: OPCServerWhereUniqueInput!) {\r\n  updateOPCServer(data: $data, where: $where) {\r\n    updateUser\r\n    name\r\n    code\r\n    address\r\n    isLocked\r\n    securityPolicy\r\n    securityModel\r\n    certification\r\n    loginMethod\r\n    user\r\n    password\r\n  }\r\n}\r\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var t={};(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),t[e.name.value]=n}}))})(),e.exports=i},"422ba":function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"where"}},type:{kind:"NamedType",name:{kind:"Name",value:"EqpEntityPropertyValueWhereInput"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"first"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},defaultValue:{kind:"IntValue",value:"100"},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"skip"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},defaultValue:{kind:"IntValue",value:"0"},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"list"},name:{kind:"Name",value:"eqpEntityPropertyValues"},arguments:[{kind:"Argument",name:{kind:"Name",value:"where"},value:{kind:"Variable",name:{kind:"Name",value:"where"}}},{kind:"Argument",name:{kind:"Name",value:"first"},value:{kind:"Variable",name:{kind:"Name",value:"first"}}},{kind:"Argument",name:{kind:"Name",value:"skip"},value:{kind:"Variable",name:{kind:"Name",value:"skip"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"eqpEquipment"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"propertyCode"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"propertyName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"statusValueCode"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"statusValueName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"workOrder"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:344}};i.loc.source={body:"query(\r\n  $where: EqpEntityPropertyValueWhereInput\r\n  $first: Int = 100\r\n  $skip: Int = 0\r\n) {\r\n  list: eqpEntityPropertyValues(where: $where, first: $first, skip: $skip) {\r\n    id\r\n    eqpEquipment {\r\n      id\r\n      name\r\n      code\r\n    }\r\n    propertyCode\r\n    propertyName\r\n    statusValueCode\r\n    statusValueName\r\n    workOrder\r\n  }\r\n}\r\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var t={};(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),t[e.name.value]=n}}))})(),e.exports=i},"6a47":function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"where"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"OPCServerWhereUniqueInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"deleteOPCServer"},arguments:[{kind:"Argument",name:{kind:"Name",value:"where"},value:{kind:"Variable",name:{kind:"Name",value:"where"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:120}};i.loc.source={body:"mutation($where: OPCServerWhereUniqueInput!) {\r\n  deleteOPCServer(where: $where) {\r\n    id\r\n    name\r\n    code\r\n  }\r\n}\r\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var t={};(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),t[e.name.value]=n}}))})(),e.exports=i},"735c":function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"data"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"OPCServerCreateInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"createOPCServer"},arguments:[{kind:"Argument",name:{kind:"Name",value:"data"},value:{kind:"Variable",name:{kind:"Name",value:"data"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"createdAt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"updatedAt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"createUser"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"updateUser"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"address"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isLocked"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"securityPolicy"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"securityModel"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"certification"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"loginMethod"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"user"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"password"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:292}};i.loc.source={body:"mutation($data: OPCServerCreateInput!) {\r\n  createOPCServer(data: $data) {\r\n    createdAt\r\n    updatedAt\r\n    createUser\r\n    updateUser\r\n    name\r\n    code\r\n    address\r\n    isLocked\r\n    securityPolicy\r\n    securityModel\r\n    certification\r\n    loginMethod\r\n    user\r\n    password\r\n  }\r\n}\r\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var t={};(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),t[e.name.value]=n}}))})(),e.exports=i},"77a3":function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"where"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"OPCServerWhereUniqueInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"oPCServer"},arguments:[{kind:"Argument",name:{kind:"Name",value:"where"},value:{kind:"Variable",name:{kind:"Name",value:"where"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"createdAt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"updatedAt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"createUser"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"updateUser"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"address"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isLocked"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"securityPolicy"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"securityModel"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"certification"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"loginMethod"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"user"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"password"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:299}};i.loc.source={body:"query($where: OPCServerWhereUniqueInput!) {\r\n  oPCServer(where: $where) {\r\n    id\r\n    createdAt\r\n    updatedAt\r\n    createUser\r\n    updateUser\r\n    name\r\n    code\r\n    address\r\n    isLocked\r\n    securityPolicy\r\n    securityModel\r\n    certification\r\n    loginMethod\r\n    user\r\n    password\r\n  }\r\n}\r\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var t={};(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),t[e.name.value]=n}}))})(),e.exports=i},"90de":function(e,n,i){"use strict";i.r(n);var a=i("1705");i.d(n,"equipmentDialog",(function(){return a["default"]}))},9922:function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"where"}},type:{kind:"NamedType",name:{kind:"Name",value:"SysDictionaryWhereInput"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"first"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},defaultValue:{kind:"IntValue",value:"100"},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"skip"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},defaultValue:{kind:"IntValue",value:"0"},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"list"},name:{kind:"Name",value:"sysDictionaries"},arguments:[{kind:"Argument",name:{kind:"Name",value:"where"},value:{kind:"Variable",name:{kind:"Name",value:"where"}}},{kind:"Argument",name:{kind:"Name",value:"first"},value:{kind:"Variable",name:{kind:"Name",value:"first"}}},{kind:"Argument",name:{kind:"Name",value:"skip"},value:{kind:"Variable",name:{kind:"Name",value:"skip"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name_en"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:206}};i.loc.source={body:"query($where: SysDictionaryWhereInput, $first: Int = 100, $skip: Int = 0) {\r\n  list: sysDictionaries(where: $where, first: $first, skip: $skip) {\r\n    id\r\n    type\r\n    code\r\n    name\r\n    name_en\r\n  }\r\n}\r\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var t={};(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),t[e.name.value]=n}}))})(),e.exports=i}}]);